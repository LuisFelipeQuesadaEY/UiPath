<Activity mc:Ignorable="sap sap2010 sads" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap2010:WorkflowViewState.IdRef="Main_1"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Core</AssemblyReference>
      <AssemblyReference>UiPath.Core.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="excelFileResult" />
      <Variable x:TypeArguments="x:String" Default="C:\Users\QX455TB\Desktop\Ejercicios\Excel File1.xlsx" Name="mainExcelPath" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_secondFile" />
      <Variable x:TypeArguments="x:String" Default="C:\Users\QX455TB\Desktop\Ejercicios\Excel File2.xlsx" Name="secondExcelFile" />
    </Flowchart.Variables>
    <Flowchart.StartNode>
      <FlowStep x:Name="__ReferenceID0" sap2010:WorkflowViewState.IdRef="FlowStep_4">
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_23">
          <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel application scope" Workbook="[excelFileResult]" WorkbookPath="[mainExcelPath]">
            <ui:ExcelApplicationScope.Body>
              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Read Excel Data">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="sd:DataTable" Name="dt_EmployeeSubledgerRange" />
                    <Variable x:TypeArguments="ui:GenericValue" Name="Date1" />
                    <Variable x:TypeArguments="ui:GenericValue" Name="Date2" />
                    <Variable x:TypeArguments="x:String" Default="B5:C17" Name="EmployeeSubledgerRange" />
                    <Variable x:TypeArguments="x:String" Name="SentenceOrange" />
                    <Variable x:TypeArguments="x:String" Name="SentenceYellow" />
                    <Variable x:TypeArguments="sd:DataTable" Name="tempDT" />
                    <Variable x:TypeArguments="ui:WorkbookApplication" Name="secondWorkbook" />
                  </Sequence.Variables>
                  <Sequence DisplayName="Read Dates">
                    <ui:ExcelReadCell Cell="B2" DisplayName="Read Date 1" SheetName="Sheet1">
                      <ui:ExcelReadCell.Result>
                        <OutArgument x:TypeArguments="ui:GenericValue">[Date1]</OutArgument>
                      </ui:ExcelReadCell.Result>
                      <sap2010:WorkflowViewState.IdRef>ExcelReadCell_6</sap2010:WorkflowViewState.IdRef>
                    </ui:ExcelReadCell>
                    <ui:ExcelReadCell Cell="B3" DisplayName="Read Date 2" SheetName="Sheet1">
                      <ui:ExcelReadCell.Result>
                        <OutArgument x:TypeArguments="ui:GenericValue">[Date2]</OutArgument>
                      </ui:ExcelReadCell.Result>
                      <sap2010:WorkflowViewState.IdRef>ExcelReadCell_7</sap2010:WorkflowViewState.IdRef>
                    </ui:ExcelReadCell>
                    <WriteLine DisplayName="Write Dates" Text="[&quot;Date 1: &quot; + Date1.ToString + &quot; &quot; + &quot;Date 2: &quot; + Date2.ToString]" sap2010:WorkflowViewState.IdRef="WriteLine_2" />
                    <sap2010:WorkflowViewState.IdRef>Sequence_24</sap2010:WorkflowViewState.IdRef>
                  </Sequence>
                  <Sequence DisplayName="Read Employee and Subledger Range">
                    <ui:ExcelReadRange AddHeaders="False" DataTable="[dt_EmployeeSubledgerRange]" DisplayName="Read Employee and Subledger Range" Range="[EmployeeSubledgerRange]" SheetName="Sheet1" sap2010:WorkflowViewState.IdRef="ExcelReadRange_7" />
                    <sap2010:WorkflowViewState.IdRef>Sequence_25</sap2010:WorkflowViewState.IdRef>
                  </Sequence>
                  <Sequence DisplayName="Read Sentences">
                    <ui:ExcelReadCell Cell="B20" DisplayName="Read Orange Sentence" SheetName="Sheet1">
                      <ui:ExcelReadCell.Result>
                        <OutArgument x:TypeArguments="x:String">[SentenceOrange]</OutArgument>
                      </ui:ExcelReadCell.Result>
                      <sap2010:WorkflowViewState.IdRef>ExcelReadCell_8</sap2010:WorkflowViewState.IdRef>
                    </ui:ExcelReadCell>
                    <ui:ExcelWriteCell Cell="B20" DisplayName="Write New Orange Sentence" SheetName="Sheet1" Text="[SentenceOrange.Replace(&quot;Orange i&quot;,&quot;I&quot;)]" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_5" />
                    <ui:ExcelReadCell Cell="B21" DisplayName="Read Yellow Sentence" SheetName="Sheet1">
                      <ui:ExcelReadCell.Result>
                        <OutArgument x:TypeArguments="x:String">[SentenceYellow]</OutArgument>
                      </ui:ExcelReadCell.Result>
                      <sap2010:WorkflowViewState.IdRef>ExcelReadCell_9</sap2010:WorkflowViewState.IdRef>
                    </ui:ExcelReadCell>
                    <ui:ExcelWriteCell Cell="B21" DisplayName="Write New Yellow Sentence" SheetName="Sheet1" Text="[SentenceYellow.Replace(&quot;Yellow i&quot;,&quot;I&quot;)]" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_6" />
                    <sap2010:WorkflowViewState.IdRef>Sequence_26</sap2010:WorkflowViewState.IdRef>
                  </Sequence>
                  <Sequence DisplayName="Write new column to Excel">
                    <Sequence DisplayName="Add Neg Quantity Column">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="scg:IEnumerable(x:Object)" Name="QuantityColumn" />
                      </Sequence.Variables>
                      <ui:ExcelReadColumn DisplayName="Read Quantity Column" Result="[QuantityColumn]" SheetName="Sheet1" StartingCell="D6" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_2" />
                      <ui:BuildDataTable DataTable="[tempDT]" DisplayName="Build data table for negative column" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Neg_x0020_Quantity&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;" sap2010:WorkflowViewState.IdRef="BuildDataTable_3" />
                      <ui:ForEach x:TypeArguments="x:Object" DisplayName="Make each quantity negative" Values="[QuantityColumn]">
                        <ui:ForEach.Body>
                          <ActivityAction x:TypeArguments="x:Object">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="x:Object" Name="number" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Body">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="sd:DataRow" Name="dataRow" />
                                <Variable x:TypeArguments="x:Int32" Default="0" Name="counter" />
                              </Sequence.Variables>
                              <Assign>
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Object">[number]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Object">["-"+number.ToString]</InArgument>
                                </Assign.Value>
                                <sap2010:WorkflowViewState.IdRef>Assign_10</sap2010:WorkflowViewState.IdRef>
                              </Assign>
                              <ui:AddDataRow DataRow="{x:Null}" ArrayRow="[{number}]" DataTable="[tempDT]" DisplayName="Add data row" sap2010:WorkflowViewState.IdRef="AddDataRow_4" />
                              <sap2010:WorkflowViewState.IdRef>Sequence_27</sap2010:WorkflowViewState.IdRef>
                            </Sequence>
                          </ActivityAction>
                        </ui:ForEach.Body>
                        <sap2010:WorkflowViewState.IdRef>ForEach`1_7</sap2010:WorkflowViewState.IdRef>
                      </ui:ForEach>
                      <sap2010:WorkflowViewState.IdRef>Sequence_28</sap2010:WorkflowViewState.IdRef>
                    </Sequence>
                    <ui:ExcelWriteRange AddHeaders="True" DataTable="[tempDT]" DisplayName="Write neg column" SheetName="Sheet1" StartingCell="E5" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_3" />
                    <sap2010:WorkflowViewState.IdRef>Sequence_29</sap2010:WorkflowViewState.IdRef>
                  </Sequence>
                  <Sequence DisplayName="Set text to bold style">
                    <ui:ExcelSelectRange DisplayName="Select Neg Column" Range="E5:E17" SheetName="Sheet1" sap2010:WorkflowViewState.IdRef="ExcelSelectRange_2" />
                    <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Type into 'EXCEL7'" EmptyField="False" SendWindowMessages="False" SimulateType="False" Text="%[d(ctrl)]b[u(ctrl)]">
                      <ui:TypeInto.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="1ed7d51991781ed816b911920ca68bca" Selector="&lt;wnd app='excel.exe' cls='XLMAIN' title='Excel File1.xlsx - Excel' /&gt;&lt;wnd cls='EXCEL7' title='Excel File1.xlsx' /&gt;" WaitForReady="INTERACTIVE" />
                      </ui:TypeInto.Target>
                      <sap2010:WorkflowViewState.IdRef>TypeInto_2</sap2010:WorkflowViewState.IdRef>
                    </ui:TypeInto>
                    <sap2010:WorkflowViewState.IdRef>Sequence_30</sap2010:WorkflowViewState.IdRef>
                  </Sequence>
                  <Sequence DisplayName="Calculate Sum">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="sd:DataTable" Name="dt_QuantityRng" />
                      <Variable x:TypeArguments="sd:DataTable" Name="dt_NegQuantityRng" />
                      <Variable x:TypeArguments="x:Int32" Name="totalQtyRng" />
                      <Variable x:TypeArguments="x:Int32" Name="totalNegQtyRng" />
                    </Sequence.Variables>
                    <ui:ExcelReadRange AddHeaders="False" DataTable="[dt_QuantityRng]" DisplayName="Read Quantity Range" Range="D6:D17" SheetName="Sheet1" sap2010:WorkflowViewState.IdRef="ExcelReadRange_8" />
                    <ui:ExcelReadRange AddHeaders="False" DataTable="[dt_NegQuantityRng]" DisplayName="Read Neg Quantity Range" Range="E6:E17" SheetName="Sheet1" sap2010:WorkflowViewState.IdRef="ExcelReadRange_9" />
                    <ui:ForEachRow DataTable="[dt_QuantityRng]" DisplayName="Sum each qty row">
                      <ui:ForEachRow.Body>
                        <ActivityAction x:TypeArguments="sd:DataRow">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Body">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="ui:GenericValue" Name="QtyRowValue" />
                            </Sequence.Variables>
                            <ui:GetRowItem Column="{x:Null}" ColumnName="{x:Null}" ColumnIndex="0" DisplayName="Get row item" Row="[row]">
                              <ui:GetRowItem.Value>
                                <OutArgument x:TypeArguments="ui:GenericValue">[QtyRowValue]</OutArgument>
                              </ui:GetRowItem.Value>
                              <sap2010:WorkflowViewState.IdRef>GetRowItem_3</sap2010:WorkflowViewState.IdRef>
                            </ui:GetRowItem>
                            <Assign>
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[totalQtyRng]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">[totalQtyRng +QtyRowValue]</InArgument>
                              </Assign.Value>
                              <sap2010:WorkflowViewState.IdRef>Assign_11</sap2010:WorkflowViewState.IdRef>
                            </Assign>
                            <sap2010:WorkflowViewState.IdRef>Sequence_31</sap2010:WorkflowViewState.IdRef>
                          </Sequence>
                        </ActivityAction>
                      </ui:ForEachRow.Body>
                      <sap2010:WorkflowViewState.IdRef>ForEachRow_3</sap2010:WorkflowViewState.IdRef>
                    </ui:ForEachRow>
                    <ui:ExcelWriteCell Cell="D18" DisplayName="Write Total Quantity" SheetName="Sheet1" Text="[totalQtyRng.ToString]" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_7" />
                    <ui:ForEachRow DataTable="[dt_NegQuantityRng]" DisplayName="Sum each neg qty row">
                      <ui:ForEachRow.Body>
                        <ActivityAction x:TypeArguments="sd:DataRow">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Body">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:Int32" Name="QtyRowValue" />
                              <Variable x:TypeArguments="ui:GenericValue" Name="NegQtyRowValue" />
                            </Sequence.Variables>
                            <ui:GetRowItem Column="{x:Null}" ColumnName="{x:Null}" ColumnIndex="0" DisplayName="Get row item" Row="[row]">
                              <ui:GetRowItem.Value>
                                <OutArgument x:TypeArguments="ui:GenericValue">[NegQtyRowValue]</OutArgument>
                              </ui:GetRowItem.Value>
                              <sap2010:WorkflowViewState.IdRef>GetRowItem_4</sap2010:WorkflowViewState.IdRef>
                            </ui:GetRowItem>
                            <Assign>
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">[totalNegQtyRng]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">[totalNegQtyRng + NegQtyRowValue]</InArgument>
                              </Assign.Value>
                              <sap2010:WorkflowViewState.IdRef>Assign_12</sap2010:WorkflowViewState.IdRef>
                            </Assign>
                            <sap2010:WorkflowViewState.IdRef>Sequence_32</sap2010:WorkflowViewState.IdRef>
                          </Sequence>
                        </ActivityAction>
                      </ui:ForEachRow.Body>
                      <sap2010:WorkflowViewState.IdRef>ForEachRow_4</sap2010:WorkflowViewState.IdRef>
                    </ui:ForEachRow>
                    <ui:ExcelWriteCell Cell="E18" DisplayName="Write Total Negative Column" SheetName="Sheet1" Text="[totalNegQtyRng.ToString]" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_8" />
                    <sap2010:WorkflowViewState.IdRef>Sequence_33</sap2010:WorkflowViewState.IdRef>
                  </Sequence>
                  <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Open 2nd Excel file" Workbook="[secondWorkbook]" WorkbookPath="[secondExcelFile]">
                    <ui:ExcelApplicationScope.Body>
                      <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Copy/Paste second excel spreasheet">
                          <ui:ExcelReadRange AddHeaders="False" DataTable="[dt_secondFile]" DisplayName="Read Range" SheetName="Data">
                            <ui:ExcelReadRange.Range>
                              <InArgument x:TypeArguments="x:String">
                                <Literal x:TypeArguments="x:String" Value="" />
                              </InArgument>
                            </ui:ExcelReadRange.Range>
                            <sap2010:WorkflowViewState.IdRef>ExcelReadRange_10</sap2010:WorkflowViewState.IdRef>
                          </ui:ExcelReadRange>
                          <ui:ExcelCloseWorkbook DisplayName="Close Workbook" Workbook="[secondWorkbook]" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_3" />
                          <sap2010:WorkflowViewState.IdRef>Sequence_34</sap2010:WorkflowViewState.IdRef>
                        </Sequence>
                      </ActivityAction>
                    </ui:ExcelApplicationScope.Body>
                    <sap2010:WorkflowViewState.IdRef>ExcelApplicationScope_3</sap2010:WorkflowViewState.IdRef>
                  </ui:ExcelApplicationScope>
                  <ui:ExcelWriteRange AddHeaders="False" DataTable="[dt_secondFile]" DisplayName="Copy Spreasheet to main Excel File" SheetName="Data">
                    <ui:ExcelWriteRange.StartingCell>
                      <InArgument x:TypeArguments="x:String">
                        <Literal x:TypeArguments="x:String" Value="" />
                      </InArgument>
                    </ui:ExcelWriteRange.StartingCell>
                    <sap2010:WorkflowViewState.IdRef>ExcelWriteRange_4</sap2010:WorkflowViewState.IdRef>
                  </ui:ExcelWriteRange>
                  <ui:ExcelCloseWorkbook DisplayName="Close Workbook" Workbook="[excelFileResult]" sap2010:WorkflowViewState.IdRef="ExcelCloseWorkbook_4" />
                  <sap2010:WorkflowViewState.IdRef>Sequence_35</sap2010:WorkflowViewState.IdRef>
                </Sequence>
              </ActivityAction>
            </ui:ExcelApplicationScope.Body>
            <sap2010:WorkflowViewState.IdRef>ExcelApplicationScope_4</sap2010:WorkflowViewState.IdRef>
          </ui:ExcelApplicationScope>
        </Sequence>
      </FlowStep>
    </Flowchart.StartNode>
    <x:Reference>__ReferenceID0</x:Reference>
    <sads:DebugSymbol.Symbol>d0NDOlxVc2Vyc1xRWDQ1NVRCXERvY3VtZW50c1xVaVBhdGhcRWplcmNpY2lvIDIgLSBCb3QgRXhjZWxcTWFpbi54YW1sfEEDqAIPAgEBRDREagIBA0Y0RmoCAQJKCaMCFAIBBEsLogImAgEFS2hLewMBnwFLiQFLmgEDAZ0BURGeAhwCAQZWQlZKAgEHXBNrHgMBkAFsE28eAwGJAXATgAEeAgF0gQETpwEeAgFWqAETsQEeAgFPsgET/QEeAgEe/gETkwIuAgEQlAITmwIoAgELnAITnAKdAQIBCF0VYigDAZgBYxVoKAMBkwFpFWnRAQMBkQFtFW38AQMBigFxFXYoAwGEAXcVd+cBAgF/eBV9KAIBen4VfucBAgF1ggEVpAEgAgFcpQEVpQHKAQIBV6kBFakBowECAVOqARWvASMCAVC5ARW5AdEBAgFKugEVugHYAQIBRbsBFdkBJQIBN9oBFdoBvAECATLbARX6ASUCAST7ARX7AcYBAgEf/gFs/gF+AgEc/gGMAf4BnwECARqEAhmPAiQCARGXAhmXAkgCAQ+UAkSUAlUCAQ2UApEBlAKXAQIBDJwCUJwCYwIBCV0sXTADAZwBX0hfTwMBmgFdVV1dAwGZAWMsYzADAZcBZUhlTwMBlQFjVWNdAwGUAWk/aaABAwGSAW1FbWIDAY4BbZkBbbMBAwGMAW2+AW3GAQMBiwFxLHExAwGIAXNBc1EDAYYBcV9xZwMBhQF3LXcyAwGDAXdzd7EBAwGBAXdld20DAYABeCx4MQIBfnpBelECAXx4X3hnAgF7fi1+MgIBeX5zfrEBAgF3fmV+bQIBdoYBF4YBwwECAW+HAReHAasJAgFsiAEXogEkAgFdpQGPAaUBkwECAVulAUWlAU8CAVmlAXmlAYEBAgFYqQFQqQFYAgFVqQFjqQFrAgFUrAGoAawBqAICAVKqAfsBqgGRAgIBUbkBRbkBVwIBTbkBgAG5AYgBAgFMuQGTAbkBmwECAUu6AUW6AVoCAUi6AYcBugGPAQIBR7oBmgG6AaIBAgFGuwEuuwFAAgFDwQEb1QEmAgE42gEt2gEyAgE22gFu2gGGAQIBNNoBYNoBaAIBM9sBLtsBQwIBMOEBG/YBJgIBJfsBLfsBMgIBI/sBdfsBkAECASH7AWf7AW8CASCFAhuMAi8CARWNAhuNAqQBAgEShgGIAYYBjAECAXOGAVWGAWcCAXGGAXKGAXoCAXCHATSHAT4CAW2IAW+IAYEBAgFqjgEdngEoAgFexQEdygEtAgE9ywEd0wEmAgE55gEd6wEtAgEq7AEd9AEmAgEmhQJLhQJcAgEYiAIhiAJQAgEXhQKAAYUChgECARaNAliNAmoCARORAU2RAVACAV+TAR+bASgCAWWcAR+cAbgBAgFgxwFQxwFdAgFBxQGDAcUBigECAT/FAWDFAWMCAT7QAUfQAWECATzNAUjNAVUCATroAVDoAWACAS7mAYMB5gGKAQIBLOYBYOYBYwIBK/EBR/EBaAIBKe4BSO4BWAIBJ5gBSpgBXwIBaJUBS5UBUwIBZpwBYZwBawIBY5wBSpwBVgIBYQ==</sads:DebugSymbol.Symbol>
  </Flowchart>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="ExcelReadCell_6" sap:VirtualizedContainerService.HintSize="314,59">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelReadCell_7" sap:VirtualizedContainerService.HintSize="314,59">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_2" sap:VirtualizedContainerService.HintSize="314,61" />
      <sap2010:ViewStateData Id="Sequence_24" sap:VirtualizedContainerService.HintSize="336,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelReadRange_7" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="Sequence_25" sap:VirtualizedContainerService.HintSize="336,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelReadCell_8" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="ExcelWriteCell_5" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="ExcelReadCell_9" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="ExcelWriteCell_6" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_26" sap:VirtualizedContainerService.HintSize="336,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelReadColumn_2" sap:VirtualizedContainerService.HintSize="287,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="BuildDataTable_3" sap:VirtualizedContainerService.HintSize="287,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="AddDataRow_4" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Sequence_27" sap:VirtualizedContainerService.HintSize="264,246">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_7" sap:VirtualizedContainerService.HintSize="287,380">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_28" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelWriteRange_3" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_29" sap:VirtualizedContainerService.HintSize="336,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelSelectRange_2" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="TypeInto_2" sap:VirtualizedContainerService.HintSize="314,134" />
      <sap2010:ViewStateData Id="Sequence_30" sap:VirtualizedContainerService.HintSize="336,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelReadRange_8" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="ExcelReadRange_9" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="GetRowItem_3" sap:VirtualizedContainerService.HintSize="314,64" />
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_31" sap:VirtualizedContainerService.HintSize="336,288">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_3" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelWriteCell_7" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetRowItem_4" sap:VirtualizedContainerService.HintSize="314,64" />
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_32" sap:VirtualizedContainerService.HintSize="336,288">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_4" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelWriteCell_8" sap:VirtualizedContainerService.HintSize="314,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_33" sap:VirtualizedContainerService.HintSize="336,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelReadRange_10" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="ExcelCloseWorkbook_3" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="Sequence_34" sap:VirtualizedContainerService.HintSize="336,282">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_3" sap:VirtualizedContainerService.HintSize="336,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelWriteRange_4" sap:VirtualizedContainerService.HintSize="336,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelCloseWorkbook_4" sap:VirtualizedContainerService.HintSize="336,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_35" sap:VirtualizedContainerService.HintSize="358,903">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_4" sap:VirtualizedContainerService.HintSize="414,1012">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_23" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">200,144.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_1" sap:VirtualizedContainerService.HintSize="614,636">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,144.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Main_1" sap:VirtualizedContainerService.HintSize="654,716" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>